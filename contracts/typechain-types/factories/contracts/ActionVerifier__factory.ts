/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ActionVerifier,
  ActionVerifierInterface,
} from "../../contracts/ActionVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "verifiedActions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "_location",
        type: "string",
      },
    ],
    name: "verifyAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061053d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806316cb178e1461003b578063afd481f61461006b575b600080fd5b6100556004803603810190610050919061031a565b61009b565b60405161006291906103ad565b60405180910390f35b610085600480360381019061008091906103fe565b6100ff565b60405161009291906103ad565b60405180910390f35b60008083836040516020016100b19291906104e3565b604051602081830303815290604052805190602001209050600160008083815260200190815260200160002060006101000a81548160ff021916908315150217905550600191505092915050565b60006020528060005260406000206000915054906101000a900460ff1681565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101868261013d565b810181811067ffffffffffffffff821117156101a5576101a461014e565b5b80604052505050565b60006101b861011f565b90506101c4828261017d565b919050565b600067ffffffffffffffff8211156101e4576101e361014e565b5b6101ed8261013d565b9050602081019050919050565b82818337600083830152505050565b600061021c610217846101c9565b6101ae565b90508281526020810184848401111561023857610237610138565b5b6102438482856101fa565b509392505050565b600082601f8301126102605761025f610133565b5b8135610270848260208601610209565b91505092915050565b600067ffffffffffffffff8211156102945761029361014e565b5b61029d8261013d565b9050602081019050919050565b60006102bd6102b884610279565b6101ae565b9050828152602081018484840111156102d9576102d8610138565b5b6102e48482856101fa565b509392505050565b600082601f83011261030157610300610133565b5b81356103118482602086016102aa565b91505092915050565b6000806040838503121561033157610330610129565b5b600083013567ffffffffffffffff81111561034f5761034e61012e565b5b61035b8582860161024b565b925050602083013567ffffffffffffffff81111561037c5761037b61012e565b5b610388858286016102ec565b9150509250929050565b60008115159050919050565b6103a781610392565b82525050565b60006020820190506103c2600083018461039e565b92915050565b6000819050919050565b6103db816103c8565b81146103e657600080fd5b50565b6000813590506103f8816103d2565b92915050565b60006020828403121561041457610413610129565b5b6000610422848285016103e9565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561045f578082015181840152602081019050610444565b60008484015250505050565b60006104768261042b565b6104808185610436565b9350610490818560208601610441565b80840191505092915050565b600081519050919050565b600081905092915050565b60006104bd8261049c565b6104c781856104a7565b93506104d7818560208601610441565b80840191505092915050565b60006104ef828561046b565b91506104fb82846104b2565b9150819050939250505056fea2646970667358221220603f65cd725be1c577cba36345e3d64bde0214a90c9d8c8867c92179e8c7643264736f6c63430008140033";

type ActionVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActionVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActionVerifier__factory extends ContractFactory {
  constructor(...args: ActionVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ActionVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ActionVerifier__factory {
    return super.connect(runner) as ActionVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActionVerifierInterface {
    return new Interface(_abi) as ActionVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ActionVerifier {
    return new Contract(address, _abi, runner) as unknown as ActionVerifier;
  }
}
